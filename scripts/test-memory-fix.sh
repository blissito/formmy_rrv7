#!/bin/bash

CHATBOT_ID="68928ae2e635f3c0b8957d0f"  # Automator T-800

echo "üß™ TEST: Verificar que nueva conversaci√≥n NO tiene memoria"
echo "=========================================================="
echo ""

SESSION_1="session-1-$(date +%s)"
SESSION_2="session-2-$(date +%s)"

echo "üîπ Sesi√≥n 1: $SESSION_1"
echo "üîπ Sesi√≥n 2: $SESSION_2"
echo ""

# CONVERSACI√ìN 1
echo "üìù CONVERSACI√ìN 1 - Estableciendo contexto"
echo "------------------------------------------"
echo ""

echo "üí¨ Mensaje 1: 'Mi nombre es Carlos y me encantan los gatos'"
curl -s -X POST http://localhost:3000/api/v0/chatbot \
  -H "x-dev-token: FORMMY_DEV_TOKEN_2025" \
  -F "intent=chat" \
  -F "chatbotId=$CHATBOT_ID" \
  -F "message=Mi nombre es Carlos y me encantan los gatos" \
  -F "sessionId=$SESSION_1" \
  -F "stream=true" 2>&1 > /tmp/resp1.txt

sleep 3

echo "üí¨ Mensaje 2: '¬øRecuerdas cu√°l es mi nombre?'"
curl -s -X POST http://localhost:3000/api/v0/chatbot \
  -H "x-dev-token: FORMMY_DEV_TOKEN_2025" \
  -F "intent=chat" \
  -F "chatbotId=$CHATBOT_ID" \
  -F "message=¬øRecuerdas cu√°l es mi nombre?" \
  -F "sessionId=$SESSION_1" \
  -F "stream=true" 2>&1 > /tmp/resp2.txt

CONTENT_2=$(grep "data: {\"type\":\"chunk\"" /tmp/resp2.txt | sed 's/.*"content":"\([^"]*\)".*/\1/' | tr -d '\n')
echo "ü§ñ Respuesta: $CONTENT_2"
echo ""

if echo "$CONTENT_2" | grep -iq "carlos"; then
  echo "‚úÖ Memoria en misma sesi√≥n: FUNCIONA (reconoci√≥ a Carlos)"
else
  echo "‚ö†Ô∏è Advertencia: No record√≥ en misma sesi√≥n (puede ser que respondi√≥ de forma diferente)"
fi

echo ""
sleep 3

# CONVERSACI√ìN 2 (NUEVA)
echo "üÜï CONVERSACI√ìN 2 - Nueva sesi√≥n (memoria debe estar LIMPIA)"
echo "-------------------------------------------------------------"
echo ""

echo "üí¨ Mensaje 3: '¬øCu√°l es mi nombre?' (NUEVA SESI√ìN: $SESSION_2)"
curl -s -X POST http://localhost:3000/api/v0/chatbot \
  -H "x-dev-token: FORMMY_DEV_TOKEN_2025" \
  -F "intent=chat" \
  -F "chatbotId=$CHATBOT_ID" \
  -F "message=¬øCu√°l es mi nombre?" \
  -F "sessionId=$SESSION_2" \
  -F "stream=true" 2>&1 > /tmp/resp3.txt

CONTENT_3=$(grep "data: {\"type\":\"chunk\"" /tmp/resp3.txt | sed 's/.*"content":"\([^"]*\)".*/\1/' | tr -d '\n')
echo "ü§ñ Respuesta: $CONTENT_3"
echo ""

echo "=========================================================="
echo "üîç RESULTADO"
echo "=========================================================="
echo ""

if echo "$CONTENT_3" | grep -iq "carlos"; then
  echo "‚ùå FALL√ì: El agente mencion√≥ 'Carlos' en nueva sesi√≥n"
  echo "   Bug de memoria persistente NO est√° arreglado"
  exit 1
elif echo "$CONTENT_3" | grep -iq "gatos"; then
  echo "‚ùå FALL√ì: El agente mencion√≥ 'gatos' en nueva sesi√≥n"
  echo "   Bug de memoria persistente NO est√° arreglado"
  exit 1
else
  echo "‚úÖ √âXITO: El agente NO record√≥ informaci√≥n de sesi√≥n anterior"
  echo "   Bug de memoria persistente est√° ARREGLADO"
  echo ""
  echo "   Sesi√≥n 1: Record√≥ contexto (esperado)"
  echo "   Sesi√≥n 2: NO record√≥ contexto (esperado - FIX FUNCIONA)"
  exit 0
fi
